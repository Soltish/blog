const fastify = require("fastify")({
  logger: true,
});
const fastifyView = require("@fastify/view");

const articles = [
  {
    id: 1,
    slug: "moya-pervaya-statia",
    title: "Моя первая статья",
    description: "Описание супер первой статьи",
    body: '<p>Ruby on Rails - это полноценный фреймворк. Он имеет множество встроенных функций, таких как ActiveRecord, ActionMailer, ActionCable и SolidQueue. Вам не нужно принимать много решений при начале нового проекта. Вы можете просто следовать соглашениям и выполнять работу. В 2024 году я не думаю, что какой-либо технологический стек имеет самые передовые функции. Самое важное - это создавать И доставлять реальные продукты. Ruby on Rails по-прежнему лучший выбор для этого. Как программисты или технические работники, у нас обычно есть множество идей. Нам нужно проверить их как можно скорее. Потому что наше время и деньги ограничены. Ruby on Rails может помочь вам сделать это как можно быстрее. Было бы пустой тратой времени, если бы вы потратили много энергии на принятие решений, например, какие пакеты Python или node.js использовать для определенной области, такой как объектно-реляционное отображение (ORM) или веб-сокеты. Ruby on Rails уже принял эти решения за вас. И эти "решения" были протестированы сотнями тысяч разработчиков, использованы миллиардами пользователей в производстве, компаниями, такими как GitHub, Shopify и Basecamp. По сравнению с другими фреймворками, такими как Next.js, FastAPI или Django, Ruby on Rails имеет множество встроенных функций. Вам не нужно принимать много решений. Вы можете просто следовать соглашениям и выполнять работу. Это самое важное для стартапа или побочного проекта.</p>',
    created_at: "24-04-24",
  },
  {
    id: 2,
    slug: "preimushchestva-python",
    title: "Преимущества Python в разработке",
    description: "Обзор ключевых преимуществ языка Python",
    body: "<p>Python - один из самых популярных языков программирования в мире. Его простота и универсальность делают его отличным выбором как для новичков, так и для опытных разработчиков. Python широко используется в веб-разработке, анализе данных, машинном обучении и искусственном интеллекте. Богатая экосистема библиотек и фреймворков, таких как Django, Flask, NumPy и Pandas, позволяет быстро создавать сложные приложения. Кроме того, Python имеет чистый и читаемый синтаксис, что облегчает написание и поддержку кода. Его кроссплатформенность обеспечивает возможность работы на различных операционных системах. Все эти факторы делают Python мощным инструментом для решения широкого спектра задач в современной разработке программного обеспечения.</p>",
    created_at: "25-04-24",
  },
  {
    id: 3,
    slug: "javascript-i-sovremennaya-veb-razrabotka",
    title: "JavaScript и современная веб-разработка",
    description: "Роль JavaScript в современном веб-программировании",
    body: "<p>JavaScript стал неотъемлемой частью современной веб-разработки. Этот язык программирования позволяет создавать интерактивные и динамичные веб-сайты и приложения. С появлением Node.js, JavaScript вышел за пределы браузера и теперь используется для серверной разработки. Фреймворки, такие как React, Angular и Vue.js, революционизировали фронтенд-разработку, позволяя создавать сложные одностраничные приложения. JavaScript также играет ключевую роль в развитии прогрессивных веб-приложений (PWA), которые сочетают в себе лучшие качества веб- и мобильных приложений. Постоянное развитие языка, включая новые возможности ECMAScript, делает JavaScript еще более мощным и гибким инструментом для разработчиков.</p>",
    created_at: "26-04-24",
  },
  {
    id: 4,
    slug: "iskusstvennyi-intellekt-v-razrabotke-po",
    title: "Искусственный интеллект в разработке ПО",
    description: "Влияние ИИ на процесс создания программного обеспечения",
    body: "<p>Искусственный интеллект (ИИ) оказывает все большее влияние на разработку программного обеспечения. ИИ-инструменты помогают автоматизировать рутинные задачи, улучшать качество кода и ускорять процесс разработки. Системы на основе машинного обучения могут анализировать код, выявлять потенциальные ошибки и предлагать оптимизации. ИИ также используется для генерации кода, что особенно полезно при создании шаблонного кода или прототипов. В тестировании ПО искусственный интеллект помогает создавать более эффективные тестовые сценарии и автоматизировать процесс тестирования. Кроме того, ИИ играет важную роль в предсказании и управлении проектными рисками, анализируя данные о ходе разработки. Все это делает ИИ мощным инструментом, способным значительно повысить эффективность и качество разработки программного обеспечения.</p>",
    created_at: "27-04-24",
  },
  {
    id: 5,
    slug: "oblachnye-tekhnologii-v-razrabotke",
    title: "Облачные технологии в разработке",
    description: "Использование облачных сервисов в современной разработке",
    body: "<p>Облачные технологии стали неотъемлемой частью современной разработки программного обеспечения. Они предоставляют разработчикам гибкие и масштабируемые ресурсы, позволяя сосредоточиться на создании приложений, а не на управлении инфраструктурой. Облачные платформы, такие как Amazon Web Services (AWS), Microsoft Azure и Google Cloud Platform, предлагают широкий спектр сервисов, от хранения данных и вычислительных мощностей до готовых инструментов для машинного обучения и аналитики. Использование облачных технологий позволяет командам разработчиков быстро развертывать и масштабировать приложения, обеспечивая высокую доступность и отказоустойчивость. Кроме того, облачные сервисы способствуют развитию микросервисной архитектуры и контейнеризации, что делает разработку и развертывание приложений еще более эффективными.</p>",
    created_at: "28-04-24",
  },
  {
    id: 6,
    slug: "mobilnaya-razrabotka-trendy",
    title: "Тренды в мобильной разработке",
    description: "Обзор актуальных тенденций в создании мобильных приложений",
    body: "<p>Мобильная разработка продолжает быстро развиваться, адаптируясь к новым технологиям и потребностям пользователей. Одним из ключевых трендов является развитие кроссплатформенных фреймворков, таких как Flutter и React Native, которые позволяют создавать приложения для iOS и Android с единой кодовой базой. Другой важный тренд - это интеграция технологий дополненной (AR) и виртуальной (VR) реальности в мобильные приложения, открывающая новые возможности для взаимодействия с пользователем. Растет также значение искусственного интеллекта и машинного обучения в мобильных приложениях, что позволяет создавать более персонализированный пользовательский опыт. Кроме того, все большее внимание уделяется безопасности и конфиденциальности данных пользователей, что влияет на архитектуру и функциональность мобильных приложений.</p>",
    created_at: "29-04-24",
  },
  {
    id: 7,
    slug: "devops-praktiki",
    title: "DevOps практики в современной разработке",
    description: "Роль DevOps в оптимизации процесса разработки и доставки ПО",
    body: "<p>DevOps практики стали неотъемлемой частью современной разработки программного обеспечения, объединяя процессы разработки (Dev) и эксплуатации (Ops). Ключевые принципы DevOps включают непрерывную интеграцию (CI) и непрерывную доставку (CD), что позволяет быстро и надежно выпускать обновления программного обеспечения. Автоматизация играет центральную роль в DevOps, охватывая тестирование, развертывание и мониторинг приложений. Использование контейнеризации, особенно с помощью технологий, таких как Docker и Kubernetes, значительно упрощает управление средами разработки и производства. DevOps также способствует культуре совместной работы и обмена знаниями между разработчиками и операционными командами, что приводит к более эффективному решению проблем и улучшению качества продукта.</p>",
    created_at: "30-04-24",
  },
  {
    id: 8,
    slug: "bezopasnost-v-razrabotke-po",
    title: "Безопасность в разработке ПО",
    description:
      "Важность и методы обеспечения безопасности в процессе разработки",
    body: "<p>Безопасность стала критически важным аспектом разработки программного обеспечения. В эпоху постоянных кибератак и утечек данных, разработчики должны уделять особое внимание защите своих приложений и данных пользователей. Ключевые практики включают в себя внедрение безопасности на всех этапах жизненного цикла разработки (Security Development Lifecycle, SDL), регулярное проведение аудита кода на наличие уязвимостей, использование шифрования для защиты чувствительных данных и применение принципа наименьших привилегий при разработке архитектуры приложений. Важно также обучение разработчиков основам кибербезопасности и внедрение автоматизированных инструментов для обнаружения и предотвращения угроз безопасности. Кроме того, растет значимость соответствия различным стандартам и регуляциям в области защиты данных, таким как GDPR и CCPA.</p>",
    created_at: "01-05-24",
  },
  {
    id: 9,
    slug: "microservices-arkhitektura",
    title: "Микросервисная архитектура",
    description: "Преимущества и вызовы использования микросервисов",
    body: "<p>Микросервисная архитектура стала популярным подходом к разработке сложных, масштабируемых приложений. В отличие от монолитной архитектуры, микросервисы разбивают приложение на набор небольших, независимых сервисов, каждый из которых отвечает за конкретную бизнес-функцию. Это обеспечивает большую гибкость в разработке, развертывании и масштабировании отдельных компонентов системы. Микросервисы позволяют командам работать более автономно, выбирая наиболее подходящие технологии для каждого сервиса. Однако, этот подход также приносит свои вызовы, такие как усложнение управления распределенной системой, необходимость эффективной коммуникации между сервисами и обеспечение согласованности данных. Использование контейнеризации и оркестрации (например, с помощью Kubernetes) часто является ключевым фактором успешного внедрения микросервисной архитектуры.</p>",
    created_at: "02-05-24",
  },
  {
    id: 10,
    slug: "machine-learning-v-razrabotke",
    title: "Машинное обучение в разработке",
    description: "Применение технологий машинного обучения в создании ПО",
    body: "<p>Машинное обучение (ML) становится все более важным инструментом в арсенале современных разработчиков программного обеспечения. Оно позволяет создавать интеллектуальные системы, способные обучаться на данных и улучшать свою производительность с течением времени. В разработке ПО машинное обучение применяется для решения широкого спектра задач: от прогнозирования поведения пользователей и персонализации контента до автоматизации процессов тестирования и обнаружения аномалий в работе систем. Популярные фреймворки, такие как TensorFlow и PyTorch, упрощают интеграцию ML-моделей в приложения. Однако, использование машинного обучения также ставит новые вызовы перед разработчиками, включая необходимость работы с большими объемами данных, обеспечение этичного использования AI и интерпретацию результатов ML-моделей.</p>",
    created_at: "03-05-24",
  },
];

fastify.register(fastifyView, {
  root: "src/views",
  layout: "layout.ejs",
  engine: {
    ejs: require("ejs"),
  },
});

fastify.get("/", (request, reply) => {
  reply.view("index.ejs", { title: "Обо мне", description: "рыба" });
});

fastify.get("/blogs", (request, reply) => {
  reply.view("blogs/index.ejs", {
    title: "Блог",
    description: "внизу",
    articles: articles,
  });
});

fastify.get("/blogs/:slug", (request, reply) => {
  const { slug } = request.params;
  const article = articles.find((el) => el.slug == slug);

  reply.view("blogs/show.ejs", {
    title: article.title,
    description: article.description,
    article: article,
  });
});

fastify.listen({ port: 3000 }, (err, address) => {
  if (err) throw err;
});
